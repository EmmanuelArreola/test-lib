const constants = require('../../utils/constants');

const {
    emits, log_levels, ELASTICIO_LISTEN_MESSAGES_ON,
    ERROR_PROPERTY, ERROR_WITH_PROPERTY, FINISH_EXEC, messages_databases, PROCESS_SUCCESS, START_EXEC, START_PROCESS,
    START_TRANS, SUCCESS_TRANS, URI_RABBITMQ, ERROR_XML_FORMAT, ERROR_CONVERT_ENCODING, ERROR_JSON_FORMAT, ERROR_MD5, flags, md5sum,
    PAYLOAD_NOT_ALLOWED
} = constants;


describe('suite to test library constants', function () {


    test('should valid constants messages', function () {
        expect(constants.emits).toBe(emits);
        expect(constants.log_levels).toBe(log_levels);
        expect(constants.ELASTICIO_LISTEN_MESSAGES_ON).toBe(ELASTICIO_LISTEN_MESSAGES_ON);
        expect(constants.ERROR_PROPERTY).toBe(ERROR_PROPERTY);
        expect(constants.ERROR_WITH_PROPERTY).toBe(ERROR_WITH_PROPERTY);
        expect(constants.FINISH_EXEC).toBe(FINISH_EXEC);
        expect(constants.messages_databases).toBe(messages_databases);
        expect(constants.PROCESS_SUCCESS).toBe(PROCESS_SUCCESS);
        expect(constants.START_EXEC).toBe(START_EXEC);
        expect(constants.START_PROCESS).toBe(START_PROCESS);
        expect(constants.START_TRANS).toBe(START_TRANS);
        expect(constants.SUCCESS_TRANS).toBe(SUCCESS_TRANS);
        expect(constants.URI_RABBITMQ).toBe(URI_RABBITMQ);
        expect(constants.ERROR_JSON_FORMAT).toBe(ERROR_JSON_FORMAT);
        expect(constants.ERROR_XML_FORMAT).toBe(ERROR_XML_FORMAT);
        expect(constants.ERROR_CONVERT_ENCODING).toBe(ERROR_CONVERT_ENCODING);
        expect(constants.ERROR_MD5).toBe(ERROR_MD5);
        expect(constants.md5sum).toBe(md5sum);
        expect(constants.flags).toBe(flags);
        expect(constants.PAYLOAD_NOT_ALLOWED).toBe(PAYLOAD_NOT_ALLOWED);
    });

    it('should print constants messages', function () {
        const consoleSpy = jest.spyOn(console, 'log');
        console.log(emits);
        console.log(log_levels);
        console.log(ELASTICIO_LISTEN_MESSAGES_ON);
        console.log(ERROR_PROPERTY);
        console.log(ERROR_WITH_PROPERTY);
        console.log(FINISH_EXEC);
        console.log(messages_databases);
        console.log(PROCESS_SUCCESS);
        console.log(START_EXEC);
        console.log(START_PROCESS);
        console.log(START_TRANS);
        console.log(SUCCESS_TRANS);
        console.log(URI_RABBITMQ);
        console.log(ERROR_JSON_FORMAT);
        console.log(ERROR_XML_FORMAT);
        console.log(ERROR_CONVERT_ENCODING);
        console.log(ERROR_MD5);
        console.log(md5sum);
        console.log(flags);
        console.log(PAYLOAD_NOT_ALLOWED);

        expect(consoleSpy).toHaveBeenCalledWith(emits);
        expect(consoleSpy).toHaveBeenCalledWith(log_levels);
        expect(consoleSpy).toHaveBeenCalledWith(ELASTICIO_LISTEN_MESSAGES_ON);
        expect(consoleSpy).toHaveBeenCalledWith(ERROR_PROPERTY);
        expect(consoleSpy).toHaveBeenCalledWith(ERROR_WITH_PROPERTY);
        expect(consoleSpy).toHaveBeenCalledWith(FINISH_EXEC);
        expect(consoleSpy).toHaveBeenCalledWith(messages_databases);
        expect(consoleSpy).toHaveBeenCalledWith(PROCESS_SUCCESS);
        expect(consoleSpy).toHaveBeenCalledWith(START_EXEC);
        expect(consoleSpy).toHaveBeenCalledWith(START_PROCESS);
        expect(consoleSpy).toHaveBeenCalledWith(START_TRANS);
        expect(consoleSpy).toHaveBeenCalledWith(SUCCESS_TRANS);
        expect(consoleSpy).toHaveBeenCalledWith(URI_RABBITMQ);
        expect(consoleSpy).toHaveBeenCalledWith(ERROR_JSON_FORMAT);
        expect(consoleSpy).toHaveBeenCalledWith(ERROR_XML_FORMAT);
        expect(consoleSpy).toHaveBeenCalledWith(ERROR_CONVERT_ENCODING);
        expect(consoleSpy).toHaveBeenCalledWith(ERROR_MD5);
        expect(consoleSpy).toHaveBeenCalledWith(md5sum);
        expect(consoleSpy).toHaveBeenCalledWith(flags);
        expect(consoleSpy).toHaveBeenCalledWith(PAYLOAD_NOT_ALLOWED);
    });

});
